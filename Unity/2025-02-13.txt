## 버전 시멘틱
(메이저).(마이너).~~
2022.3.14f1

Unity naming convention
    - directory 
        주로 복수형으로

Inspector
    info , attributes of Object

isometric


## Design Pattern
Component pattern
    - 컴포넌트의 삽입 삭제에 용이



# 2025.02.17

## 렌더링 파이프라인
    - Local Space
        3D 모델 자체의 공간
    - World Space
        게임/secene 내부의 공간?
    - View Space
        카메라

    Screen Space vs World Space

## Canvas 
    - UI 배치를 위한
    - screen space?

    pivot - 좌하단 (0, 0)
            우상단 (1, 1)
    Image 컴포넌트
        image source - 2d sprite!
    
    (Vertical) Layout Group -Component



## EventSystem
    UI 상호작용 
      ex) 버튼 클릭


## Script vs Inspector
    public -> Inspector에서 접근 가능
    변수의 값 - Inspector 우선


## C# 의 컴파일 (JIT)
    C# script - IL언어 - .dll
                .NET
    ### C/C++과의 차이점


# 2025.02.18

## Prefab
    - 참조
    - flyweight pattern
    
    - 경우에 따라 참조 해제도 가능
      (프리팹 해제?)
    
## 월드 내에 UI 추가하기
    ### 오브젝트 이름 UI
        - 오브젝트 자식으로 Canvas
          - 이때 캔버스의 스케일을 작게 설정해야함
          ex) 0.01


TextMeshProUGUI -> using TMPro;

(자기자신) =  GetComponent<자기자신>();
이 코드로 Inspector에서 일일이 오브젝트 자기 자신을 넣을 필요가 없어짐
만약, 이 코드 없이 Inspector를 조작하지 않고 실행할 경우 NullReferencing? 오류 발생

    



    


